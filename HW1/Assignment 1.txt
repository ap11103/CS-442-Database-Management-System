CS 442 Assignment 1 
Name: Alisha Patel
CWID: 2006391


QUERY 1:

-- HW #1/ Query 1
-- STEP 1:
--saves the output of the query
with part1 as (
	select cust, min(quant) min_q, max(quant) max_q, round(avg(quant), 1) avg_q
	from sales 
	group by cust
), 
--to display the table
--select * from part1
part2 as (
	select part1.cust, part1.min_q, s.prod, s.date, s.state, part1.max_q, part1.avg_q 
	from part1, sales s
	where part1.cust = s.cust and part1.min_q = s.quant
),
-- select * from part2
part3 as (
	select part2.cust, part2.min_q, part2.prod min_prod, part2.date min_date, part2.state min_state, 
	part2.max_q, s.prod max_prod, s.date max_date, s.state max_state, part2.avg_q 
	from part2, sales s
	where part2.cust = s.cust and part2.max_q = s.quant
)
select * from part3


QUERY 2:

--Query2: For each year and month, find the busiest day and slowest day
--and their corresponding quantities

--computes the sum of quant as a base to compute max and min q
with part1 as
	(select year, month, day, sum(quant)as sum_q
	 from sales
	 group by year, month, day),
--from part1, it computes the min q for year and month	 
slow_q as
	(select year, month, min(sum_q) as min_q
	 from part1
	 group by year, month),
--from part1 and slow_q; uses join to find the slowest day based on year and month	 
slow_day as
	(select part1.year, part1.month, part1.day, slow.min_q
	from part1
	join slow_q as slow on part1.year = slow.year and part1.month = slow.month and part1.sum_q = slow.min_q),
--from part1, it computes the max q for year and month
busy_q as
	(select year, month, max(sum_q) as max_q
	 from part1
	 group by year, month),
--from previous part and part1, find the busiest day based on year and month
busy_day as
	(select part1.year, part1.month, part1.day, busy.max_q
	from part1
	join busy_q as busy on part1.year = busy.year and part1.month = busy.month and part1.sum_q = busy.max_q)

--puts all the output of the previous subqueries together using join based in year and month
select b_final.year, b_final.month, b_final.day as BUSIEST_DAY, b_final.max_q as BUSIEST_TOTAL_Q, 
		s_final.day as SLOWEST_DAY, s_final.min_q as SLOWEST_TOTAL_Q
from busy_day as b_final
join slow_day as s_final on b_final.year = s_final.year and b_final.month = s_final.month;




QUERY 3:

--Query 3: for each customer, find the most favorite and least favorite product
--computes the sum quantities by customer for max and min
with part1 as 
	(select cust, prod, sum(quant) as sum_q
	from sales
	group by cust, prod), 
--computes max as most fav quantities depending on the customer
max_q as 
	(select cust, max(sum_q) as fav
	from part1
	group by cust), 
--computes min as least fav quantities depending on the customer
min_q as 
	(select cust, min(sum_q) as unfav
	from part1
	group by cust),
--joins max quantities and cust
most_f as 
	(select part1.cust, part1.prod
	from part1
	join max_q as max_fav on part1.cust = max_fav.cust
	and part1.sum_q = max_fav.fav), 
--joins least fav and cust	
least_f as 
	(select part1.cust, part1.prod
	from part1
	join min_q as min_unfav on part1.cust = min_unfav.cust
	and part1.sum_q = min_unfav.unfav) 
--puts it all together with customer, most_fav, and least_fav	
select least_fav.cust as CUSTOMER, most_fav.prod as MOST_FAV_PROD, least_fav.prod as LEAST_FAV_PROD
from least_f as least_fav
join most_f as most_fav on least_fav.cust = most_fav.cust;




QUERY 4:

--Query 4: For each customer and product combination, show the average sales quantities for the four seasons
--count the average for 4 seasons
--count the average and count for the whole year
--include customer and product
--compute the avg for spring
with sp_avg as 
	(select s.cust, s.prod, round(avg(s.quant),0) as spring_avg
	from sales s
	where s.month = 3 or s.month = 4 or s.month = 5
	group by cust, prod
	),
--compute the avg for summer
sm_avg as 
	(select s.cust, s.prod, round(avg(s.quant),0) as summer_avg
	from sales s
	where s.month = 6 or s.month = 7 or s.month = 8
	group by cust, prod
	),
--compute the avg for fall
f_avg as 
	(select s.cust, s.prod, round(avg(s.quant),0) as fall_avg
	from sales s
	where s.month = 9 or s.month = 10 or s.month = 11
	group by cust, prod
	),
--compute the avg for winter
w_avg as 
	(select s.cust, s.prod, round(avg(s.quant),0) as winter_avg
	from sales s
	where s.month = 1 or s.month = 2 or s.month = 12
	group by cust, prod
	),
--compute the year avg, sum, and quant
y_avg as 
	(select s.cust, s.prod, round(avg(s.quant),0) as year_avg, sum(s.quant) as year_total, 
	 count(s.quant) as year_count
	from sales s
	group by cust, prod)
--join the year, and quaterly info together
select y_avg.cust as CUSTOMER, y_avg.prod as PRODUCT, sp_avg.spring_avg as SPRING_AVG, sm_avg.summer_avg as SUMMER_AVG, 
		f_avg.fall_avg as FALL_AVG, w_avg.winter_avg as WINTER_AVG, y_avg.year_avg as AVERAGE, 
		y_avg.year_total as TOTAL, y_avg.year_count as COUNT
from y_avg join sp_avg on sp_avg.cust = y_avg.cust and sp_avg.prod = y_avg.prod
join sm_avg on sm_avg.cust = y_avg.cust and sm_avg.prod = y_avg.prod
join f_avg on f_avg.cust = y_avg.cust and f_avg.prod = y_avg.prod
join w_avg on w_avg.cust = y_avg.cust and w_avg.prod = y_avg.prod
order by y_avg.cust, y_avg.prod


QUERY 5:


--Query 5
--For each product, output the max sales quant for each quarter 
--and their corresponding dates
--compute the max sales quant for each product
--compute the date of the max sales
with spring as 
	(select s.prod, max(s.quant) as Q1_MAX
	from sales s
	where s.month = 3 or s.month = 4 or s.month = 5
	group by prod), 
s_date as 
	(select spring.prod, spring.Q1_MAX, date
	from spring
	join sales s on spring.prod = s.prod and spring.Q1_MAX = s.quant
	where s.month = 3 or s.month = 4 or s.month = 5), 

summer as 
	(select s.prod, max(s.quant) as Q2_MAX
	from sales s
	where s.month = 6 or s.month = 7 or s.month = 8
	group by prod), 
sm_date as
	(select summer.prod, summer.Q2_MAX, date
	from summer
	join sales s on summer.prod = s.prod and summer.Q2_MAX = s.quant
	where s.month = 6 or s.month = 7 or s.month = 8),

fall as
	(select s.prod, max(s.quant) as Q3_MAX
	from sales s
	where s.month = 9 or s.month = 10 or s.month = 11
	group by prod),
f_date as
	(select fall.prod, fall.Q3_MAX, date
	from fall
	join sales s on fall.prod = s.prod and fall.Q3_MAX = s.quant
	where s.month = 9 or s.month = 10 or s.month = 11),


winter as
	(select s.prod, max(s.quant) as Q4_MAX
	from sales s
	where s.month = 1 or s.month = 2 or s.month = 12
	group by prod),
w_date as
	(select winter.prod, winter.Q4_MAX, date
	from winter
	join sales s on winter.prod = s.prod and winter.Q4_MAX = s.quant
	where s.month = 1 or s.month = 2 or s.month = 12)
--put the quarter and date together

select distinct s.prod as PRODUCT, s_date.Q1_MAX, s_date.date, sm_date.Q2_MAX, sm_date.date, 
	f_date.Q3_MAX, f_date.date, w_date.Q4_MAX, w_date.date
from sales s
join s_date on s.prod = s_date.prod
join sm_date on s.prod = sm_date.prod
join f_date on s.prod = f_date.prod
join w_date on s.prod = w_date.prod
order by s.prod;

